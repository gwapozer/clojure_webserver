
/****** Object:  StoredProcedure [dbo].[SearchSensorByEventId]    Script Date: 1/15/2020 10:39:31 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[SearchSensorByEventId]
	@SensorId int,
	@EvtIds varchar(500),
	@ReadingStartDate DateTime,
	@ReadingEndDate DateTime,
	@PageIndex int,
	@PageSize int,
	@SortField int,
	@ForExport int
AS
	SET NOCOUNT ON;

	DECLARE @TotalRows INT
	DECLARE @PageLowerBound INT
	DECLARE @PageUpperBound INT

	IF @PageSize IS NOT NULL
	BEGIN
		SET @PageLowerBound = @PageSize * @PageIndex
		SET @PageUpperBound = @PageLowerBound + @PageSize + 1
	END

	CREATE TABLE #PageIndex
	(
		[IndexID] int IDENTITY (1,1) NOT NULL,
		id int,
		SenId int,
		UserId varchar(10),
		Field1Float float,
		EvtText varchar(40),
		ReadingAt datetime
	)

	CREATE TABLE #PageIndexSummary
	(
		[IndexID] int IDENTITY (1,1) NOT NULL,
		DataID int NOT NULL,
		SensorID int NOT NULL,
		UserID varchar(10),
		Temp float,
		EventText varchar(5000),
		ReadingOn datetime
	)

	INSERT INTO #PageIndex
	(
		id,
		SenId,
		UserId,
		Field1Float,
		EvtText,
		ReadingAt
	)

	SELECT
	D.id,
	D.SenId,
	ESI.WifiMonitorName as UserId,
	D.Field1Float,
	D.EvtText,
	D.ReadingAt
	FROM Data D
	LEFT OUTER JOIN Sensor S on S.id = D.SenId
	LEFT OUTER JOIN _ENT_SensorInfo ESI on ESI.SensorID = D.SenId
	WHERE
	(@SensorId IS NULL OR @SensorId = -1 OR D.SenId = @SensorId)
	AND (@EvtIds IS NULL OR ',' + @EvtIds + ',' like '%,' + convert(varchar(500), D.EvtId) + ',%')
	AND (@ReadingStartDate IS NULL OR DATEDIFF(d, @ReadingStartDate, D.ReadingAt) >= 0)
	AND (@ReadingEndDate IS NULL OR DATEDIFF(d, @ReadingEndDate, D.ReadingAt) <= 0)
	AND D.id NOT IN (select DataID from _ENT_SensorData)
	--ORDER BY
	--LEFT(S.UserId,PATINDEX('%[0-9]%',S.UserId)-1),CONVERT(INT,SUBSTRING(S.UserId,PATINDEX('%[0-9]%',S.UserId),LEN(S.UserId)))
	--CASE WHEN @SortField = -1 THEN S.UserId END ASC,
	--CASE WHEN @SortField = 1 THEN S.UserId END DESC

	INSERT INTO #PageIndexSummary
	(
		DataID,
		SensorID,
		UserID,
		Temp,
		EventText,
		ReadingOn
	)

	SELECT
	P.id,
	P.SenId,
	P.UserId,
	P.Field1Float,
	P.EvtText,--.[GetSensorEventBySensorId](P.SenId, @ReadingStartDate, @ReadingEndDate),
	P.ReadingAt
	FROM #PageIndex P
	GROUP BY
	P.UserId, P.SenId, P.Field1Float, P.ReadingAt,P.EvtText,P.id

	SELECT @TotalRows = COUNT([IndexID]) FROM #PageIndexSummary

	IF @ForExport = 0
	BEGIN
		SELECT
		P.SensorID,
		P.DataID,
		P.UserID,
		P.Temp,
		P.EventText,
		P.ReadingOn,
		@TotalRows as TotalRows
		FROM #PageIndexSummary P
		LEFT JOIN _ENT_SensorInfo SI on SI.SensorID = P.SensorID
		WHERE
		(@PageSize IS NULL OR P.IndexID > @PageLowerBound)
		AND (@PageSize IS NULL OR P.IndexID < @PageUpperBound)
		ORDER BY
		LEFT(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName)-1),CONVERT(INT,SUBSTRING(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName),LEN(SI.WifiMonitorName)))
		,P.ReadingOn DESC
	END
	ELSE IF @ForExport = 1
	BEGIN
		SELECT
		P.UserID,
		P.Temp,
		P.EventText,
		P.ReadingOn
		FROM #PageIndexSummary P
		LEFT JOIN _ENT_SensorInfo SI on SI.SensorID = P.SensorID
		ORDER BY
		LEFT(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName)-1),CONVERT(INT,SUBSTRING(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName),LEN(SI.WifiMonitorName)))
	END
	 ELSE IF @ForExport = 2
	BEGIN
		SELECT
		S.UserId as UserID,
		D.Field1Float as Temp,
		D.EvtText as EventTExt,
		D.ReadingAt as ReadingOn

		FROM #PageIndex P
		LEFT OUTER JOIN Data D on D.id = P.id
		LEFT OUTER JOIN Sensor S on S.id = D.SenId

	END

	DROP TABLE #PageIndex
	DROP TABLE #PageIndexSummary


SET ANSI_NULLS ON












/****** Object:  StoredProcedure [dbo].[SearchSensorByTemp]    Script Date: 1/15/2020 10:40:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[SearchSensorByTemp]
	@FreezerIds varchar(500),
	@FridgeIds varchar(500),
	@ReadingStartDate DateTime,
	@ReadingEndDate DateTime,
	@PageIndex int,
	@PageSize int,
	@SortField int,
	@ForExport int
AS
	SET NOCOUNT ON;

	DECLARE @TotalRows INT
	DECLARE @PageLowerBound INT
	DECLARE @PageUpperBound INT

	IF @PageSize IS NOT NULL
	BEGIN
		SET @PageLowerBound = @PageSize * @PageIndex
		SET @PageUpperBound = @PageLowerBound + @PageSize + 1
	END

	CREATE TABLE #PageIndex
	(
		[IndexID] int IDENTITY (1,1) NOT NULL,
		id int,
		SenId int,
		UserId varchar(10),
		Field1Float float,
		EvtText varchar(40),
		ReadingAt datetime
	)

	CREATE TABLE #PageIndexSummary
	(
		[IndexID] int IDENTITY (1,1) NOT NULL,
		DataID int NOT NULL,
		SensorID int NOT NULL,
		UserID varchar(10),
		Temp float,
		EventText varchar(5000),
		ReadingOn datetime
	)

	INSERT INTO #PageIndex
	(
		id,
		SenId,
		UserId,
		Field1Float,
		EvtText,
		ReadingAt
	)

	SELECT
	D.id,
	D.SenId,
	ESI.WifiMonitorName as UserId,
	D.Field1Float,
	D.EvtText,
	D.ReadingAt
	FROM Data D
	LEFT OUTER JOIN Sensor S on S.id = D.SenId
	LEFT OUTER JOIN _ENT_SensorInfo ESI on ESI.SensorID = D.SenId
	WHERE
	(
	((@FreezerIds IS NULL OR ',' + @FreezerIds + ',' like '%,' + convert(varchar(500), D.SenId) + ',%') and (D.Field1Float >= -10.0 or D.Field1Float <= -35.0))
	OR
	((@FridgeIds IS NULL OR ',' + @FridgeIds + ',' like '%,' + convert(varchar(500), D.SenId) + ',%') and (D.Field1Float >= 8.0 or D.Field1Float <= 0.0))
	)
	AND (@ReadingStartDate IS NULL OR DATEDIFF(d, @ReadingStartDate, D.ReadingAt) >= 0)
	AND (@ReadingEndDate IS NULL OR DATEDIFF(d, @ReadingEndDate, D.ReadingAt) <= 0)
	AND D.id NOT IN (select DataID from _ENT_SensorData)

	INSERT INTO #PageIndexSummary
	(
		DataID,
		SensorID,
		UserID,
		Temp,
		EventText,
		ReadingOn
	)

	SELECT
	P.id,
	P.SenId,
	P.UserId,
	P.Field1Float,
	P.EvtText,--.[GetSensorEventBySensorId](P.SenId, @ReadingStartDate, @ReadingEndDate),
	P.ReadingAt
	FROM #PageIndex P
	GROUP BY
	P.UserId, P.SenId, P.Field1Float, P.ReadingAt,P.EvtText,P.id

	SELECT @TotalRows = COUNT([IndexID]) FROM #PageIndexSummary

	IF @ForExport = 0
	BEGIN
		SELECT
		P.SensorID,
		P.DataID,
		P.UserID,
		P.Temp,
		P.EventText,
		P.ReadingOn,
		@TotalRows as TotalRows
		FROM #PageIndexSummary P
		LEFT JOIN _ENT_SensorInfo SI on SI.SensorID = P.SensorID
		WHERE
		(@PageSize IS NULL OR P.IndexID > @PageLowerBound)
		AND (@PageSize IS NULL OR P.IndexID < @PageUpperBound)
		ORDER BY
		LEFT(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName)-1),CONVERT(INT,SUBSTRING(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName),LEN(SI.WifiMonitorName)))
		,P.ReadingOn DESC
	END
	ELSE IF @ForExport = 1
	BEGIN
		SELECT
		P.UserID,
		P.Temp,
		P.EventText,
		P.ReadingOn
		FROM #PageIndexSummary P
		LEFT JOIN _ENT_SensorInfo SI on SI.SensorID = P.SensorID
		ORDER BY
		LEFT(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName)-1),CONVERT(INT,SUBSTRING(SI.WifiMonitorName,PATINDEX('%[0-9]%',SI.WifiMonitorName),LEN(SI.WifiMonitorName)))
	END
	 ELSE IF @ForExport = 2
	BEGIN
		SELECT
		S.UserId as UserID,
		D.Field1Float as Temp,
		D.EvtText as EventTExt,
		D.ReadingAt as ReadingOn

		FROM #PageIndex P
		LEFT OUTER JOIN Data D on D.id = P.id
		LEFT OUTER JOIN Sensor S on S.id = D.SenId

	END

	DROP TABLE #PageIndex
	DROP TABLE #PageIndexSummary


SET ANSI_NULLS ON


